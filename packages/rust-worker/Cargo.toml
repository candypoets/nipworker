[package]
name = "rust-worker"
version = "0.1.0"
edition = "2021"

[lib]
name = "rust_worker"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]


[profile.dev]
debug = 2              # Full debug info
panic = "unwind"       # Allow unwinding for better stack traces
opt-level = 0          # No optimization
overflow-checks = true
lto = false
codegen-units = 256
incremental = true

[profile.release]
opt-level = 3           # Optimize for performance
lto = true              # Enable Link Time Optimization
codegen-units = 1       # Reduce number of codegen units to increase optimizations
panic = "abort"         # Abort on panic to reduce binary size
strip = true            # Strip symbols from binary
debug = false           # Disable debug info in release builds
overflow-checks = false # Disable overflow checks in release

# CI-friendly profile to avoid OOM in GitHub Actions
[profile.ci-release]
inherits = "release"
opt-level = 2        # Less aggressive optimization
lto = "thin"         # Thinner LTO to use less memory
codegen-units = 4    # More codegen units = less memory per unit

[dependencies]
# Lightweight async utilities (replacing tokio)
futures = "0.3"
futures-util = "0.3"

# Essential WASM bindings
instant = { version = "0.1", features = ["wasm-bindgen"] }
gloo-timers = { version = "0.3", features = ["futures"] }

# Basic error handling
thiserror = "1.0"

# Serialization (always needed)
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
rmp-serde = "1.1"
serde-wasm-bindgen = "0.6"

# WASM-native WebSocket support
gloo-net = { version = "0.4", features = ["websocket"] }

# Optional heavy dependencies
anyhow = { version = "1.0", optional = true }
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", features = [
    "env-filter",
    "fmt",
], optional = true }
regex = { version = "1.0", optional = true }
nostr = { version = "0.29", default-features = false, features = [
    "std",
    "nip04",
    "nip44",
], optional = true }

k256 = { version = "0.13", features = ["ecdsa", "sha256"] }
sha2 = "0.10"
hex = "0.4"
rustc-hash = "2.0"

uuid = { version = "1.0", features = ["v4", "serde", "js"], optional = true }
url = { version = "2.0", optional = true }

chrono = { version = "0.4", features = ["serde"], optional = true }

# WASM bindings (all targets for now to avoid conditional compilation issues)
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4"
js-sys = "0.3"
console_error_panic_hook = { version = "0.1", optional = true }
wasm-bindgen-test = "0.3.50"

# Memory optimization
wee_alloc = { version = "0.4", optional = true }
flatbuffers = "25.2.10"

# Concurrent data structures (removed dashmap - using RefCell for WASM)
# moka = { version = "0.12", optional = true }

[dependencies.web-sys]
version = "0.3"
default-features = false
features = [
    "console",
    "DomStringList",
    "IdbFactory",
    "IdbDatabase",
    "IdbObjectStore",
    "IdbOpenDbRequest",
    "IdbRequest",
    "IdbTransaction",
    "IdbTransactionMode",
    "IdbVersionChangeEvent",
    "Window",
    "WorkerGlobalScope",
    "DedicatedWorkerGlobalScope",
    "WebSocket",
    "CloseEvent",
    "ErrorEvent",
    "Event",
    "BinaryType",
]

[features]
default = ["full"]
wee_alloc = ["dep:wee_alloc"]

# Full feature set - includes all heavy dependencies
full = [
    "anyhow",
    "tracing",
    "tracing-subscriber",
    "regex",
    "nostr",
    "uuid",
    "url",
    "chrono",
    "console_error_panic_hook",
]

# Minimal feature set - just types and basic functionality
minimal = []

# Atomics feature for concurrent data structures
atomics = []

[package.metadata.wasm-pack.profile.release]
wasm-opt = [
    "-O4",
    "--enable-bulk-memory",
    "--enable-sign-ext",
    "--enable-mutable-globals",
    "--enable-nontrapping-float-to-int",
]

[package.metadata.wasm-pack.profile.dev]
wasm-opt = false
