import { ByteString } from "src/lib/ByteString";
// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ZapRequest, ZapRequestT } from '../../nostr/fb/zap-request.js';


export class Kind9735Parsed implements flatbuffers.IUnpackableObject<Kind9735ParsedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Kind9735Parsed {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsKind9735Parsed(bb:flatbuffers.ByteBuffer, obj?:Kind9735Parsed):Kind9735Parsed {
  return (obj || new Kind9735Parsed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsKind9735Parsed(bb:flatbuffers.ByteBuffer, obj?:Kind9735Parsed):Kind9735Parsed {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Kind9735Parsed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id(): ByteString|null
id(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
id(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

amount():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

content(): ByteString|null
content(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
content(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

bolt11(): ByteString|null
bolt11(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
bolt11(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

preimage(): ByteString|null
preimage(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
preimage(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

sender(): ByteString|null
sender(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
sender(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

recipient(): ByteString|null
recipient(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
recipient(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

event(): ByteString|null
event(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
event(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

eventCoordinate(): ByteString|null
eventCoordinate(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
eventCoordinate(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

timestamp():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

valid():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

description(obj?:ZapRequest):ZapRequest|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? (obj || new ZapRequest()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startKind9735Parsed(builder:flatbuffers.Builder) {
  builder.startObject(12);
}

static addId(builder:flatbuffers.Builder, idOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, idOffset, 0);
}

static addAmount(builder:flatbuffers.Builder, amount:number) {
  builder.addFieldInt32(1, amount, 0);
}

static addContent(builder:flatbuffers.Builder, contentOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, contentOffset, 0);
}

static addBolt11(builder:flatbuffers.Builder, bolt11Offset:flatbuffers.Offset) {
  builder.addFieldOffset(3, bolt11Offset, 0);
}

static addPreimage(builder:flatbuffers.Builder, preimageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, preimageOffset, 0);
}

static addSender(builder:flatbuffers.Builder, senderOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, senderOffset, 0);
}

static addRecipient(builder:flatbuffers.Builder, recipientOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, recipientOffset, 0);
}

static addEvent(builder:flatbuffers.Builder, eventOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, eventOffset, 0);
}

static addEventCoordinate(builder:flatbuffers.Builder, eventCoordinateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, eventCoordinateOffset, 0);
}

static addTimestamp(builder:flatbuffers.Builder, timestamp:bigint) {
  builder.addFieldInt64(9, timestamp, BigInt('0'));
}

static addValid(builder:flatbuffers.Builder, valid:boolean) {
  builder.addFieldInt8(10, +valid, +false);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, descriptionOffset, 0);
}

static endKind9735Parsed(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // id
  builder.requiredField(offset, 8) // content
  builder.requiredField(offset, 10) // bolt11
  builder.requiredField(offset, 14) // sender
  builder.requiredField(offset, 16) // recipient
  builder.requiredField(offset, 26) // description
  return offset;
}


unpack(): Kind9735ParsedT {
  return new Kind9735ParsedT(
    this.id(),
    this.amount(),
    this.content(),
    this.bolt11(),
    this.preimage(),
    this.sender(),
    this.recipient(),
    this.event(),
    this.eventCoordinate(),
    this.timestamp(),
    this.valid(),
    (this.description() !== null ? this.description()!.unpack() : null)
  );
}


unpackTo(_o: Kind9735ParsedT): void {
  _o.id = this.id();
  _o.amount = this.amount();
  _o.content = this.content();
  _o.bolt11 = this.bolt11();
  _o.preimage = this.preimage();
  _o.sender = this.sender();
  _o.recipient = this.recipient();
  _o.event = this.event();
  _o.eventCoordinate = this.eventCoordinate();
  _o.timestamp = this.timestamp();
  _o.valid = this.valid();
  _o.description = (this.description() !== null ? this.description()!.unpack() : null);
}
}

export class Kind9735ParsedT implements flatbuffers.IGeneratedObject {
constructor(
  public id: ByteString|Uint8Array|null = null,
  public amount: number = 0,
  public content: ByteString|Uint8Array|null = null,
  public bolt11: ByteString|Uint8Array|null = null,
  public preimage: ByteString|Uint8Array|null = null,
  public sender: ByteString|Uint8Array|null = null,
  public recipient: ByteString|Uint8Array|null = null,
  public event: ByteString|Uint8Array|null = null,
  public eventCoordinate: ByteString|Uint8Array|null = null,
  public timestamp: bigint = BigInt('0'),
  public valid: boolean = false,
  public description: ZapRequestT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const id = (this.id !== null ? builder.createString(this.id!) : 0);
  const content = (this.content !== null ? builder.createString(this.content!) : 0);
  const bolt11 = (this.bolt11 !== null ? builder.createString(this.bolt11!) : 0);
  const preimage = (this.preimage !== null ? builder.createString(this.preimage!) : 0);
  const sender = (this.sender !== null ? builder.createString(this.sender!) : 0);
  const recipient = (this.recipient !== null ? builder.createString(this.recipient!) : 0);
  const event = (this.event !== null ? builder.createString(this.event!) : 0);
  const eventCoordinate = (this.eventCoordinate !== null ? builder.createString(this.eventCoordinate!) : 0);
  const description = (this.description !== null ? this.description!.pack(builder) : 0);

  Kind9735Parsed.startKind9735Parsed(builder);
  Kind9735Parsed.addId(builder, id);
  Kind9735Parsed.addAmount(builder, this.amount);
  Kind9735Parsed.addContent(builder, content);
  Kind9735Parsed.addBolt11(builder, bolt11);
  Kind9735Parsed.addPreimage(builder, preimage);
  Kind9735Parsed.addSender(builder, sender);
  Kind9735Parsed.addRecipient(builder, recipient);
  Kind9735Parsed.addEvent(builder, event);
  Kind9735Parsed.addEventCoordinate(builder, eventCoordinate);
  Kind9735Parsed.addTimestamp(builder, this.timestamp);
  Kind9735Parsed.addValid(builder, this.valid);
  Kind9735Parsed.addDescription(builder, description);

  return Kind9735Parsed.endKind9735Parsed(builder);
}
}
