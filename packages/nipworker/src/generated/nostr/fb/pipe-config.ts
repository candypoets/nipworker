import { ByteString } from "src/lib/ByteString";
// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { CounterPipeConfig, CounterPipeConfigT } from '../../nostr/fb/counter-pipe-config.js';
import { KindFilterPipeConfig, KindFilterPipeConfigT } from '../../nostr/fb/kind-filter-pipe-config.js';
import { NpubLimiterPipeConfig, NpubLimiterPipeConfigT } from '../../nostr/fb/npub-limiter-pipe-config.js';
import { ParsePipeConfig, ParsePipeConfigT } from '../../nostr/fb/parse-pipe-config.js';
import { ProofVerificationPipeConfig, ProofVerificationPipeConfigT } from '../../nostr/fb/proof-verification-pipe-config.js';
import { SaveToDbPipeConfig, SaveToDbPipeConfigT } from '../../nostr/fb/save-to-db-pipe-config.js';
import { SerializeEventsPipeConfig, SerializeEventsPipeConfigT } from '../../nostr/fb/serialize-events-pipe-config.js';


export enum PipeConfig {
  NONE = 0,
  ParsePipeConfig = 1,
  KindFilterPipeConfig = 2,
  CounterPipeConfig = 3,
  NpubLimiterPipeConfig = 4,
  SaveToDbPipeConfig = 5,
  SerializeEventsPipeConfig = 6,
  ProofVerificationPipeConfig = 7
}

export function unionToPipeConfig(
  type: PipeConfig,
  accessor: (obj:CounterPipeConfig|KindFilterPipeConfig|NpubLimiterPipeConfig|ParsePipeConfig|ProofVerificationPipeConfig|SaveToDbPipeConfig|SerializeEventsPipeConfig) => CounterPipeConfig|KindFilterPipeConfig|NpubLimiterPipeConfig|ParsePipeConfig|ProofVerificationPipeConfig|SaveToDbPipeConfig|SerializeEventsPipeConfig|null
): CounterPipeConfig|KindFilterPipeConfig|NpubLimiterPipeConfig|ParsePipeConfig|ProofVerificationPipeConfig|SaveToDbPipeConfig|SerializeEventsPipeConfig|null {
  switch(PipeConfig[type]) {
    case 'NONE': return null; 
    case 'ParsePipeConfig': return accessor(new ParsePipeConfig())! as ParsePipeConfig;
    case 'KindFilterPipeConfig': return accessor(new KindFilterPipeConfig())! as KindFilterPipeConfig;
    case 'CounterPipeConfig': return accessor(new CounterPipeConfig())! as CounterPipeConfig;
    case 'NpubLimiterPipeConfig': return accessor(new NpubLimiterPipeConfig())! as NpubLimiterPipeConfig;
    case 'SaveToDbPipeConfig': return accessor(new SaveToDbPipeConfig())! as SaveToDbPipeConfig;
    case 'SerializeEventsPipeConfig': return accessor(new SerializeEventsPipeConfig())! as SerializeEventsPipeConfig;
    case 'ProofVerificationPipeConfig': return accessor(new ProofVerificationPipeConfig())! as ProofVerificationPipeConfig;
    default: return null;
  }
}

export function unionListToPipeConfig(
  type: PipeConfig, 
  accessor: (index: number, obj:CounterPipeConfig|KindFilterPipeConfig|NpubLimiterPipeConfig|ParsePipeConfig|ProofVerificationPipeConfig|SaveToDbPipeConfig|SerializeEventsPipeConfig) => CounterPipeConfig|KindFilterPipeConfig|NpubLimiterPipeConfig|ParsePipeConfig|ProofVerificationPipeConfig|SaveToDbPipeConfig|SerializeEventsPipeConfig|null, 
  index: number
): CounterPipeConfig|KindFilterPipeConfig|NpubLimiterPipeConfig|ParsePipeConfig|ProofVerificationPipeConfig|SaveToDbPipeConfig|SerializeEventsPipeConfig|null {
  switch(PipeConfig[type]) {
    case 'NONE': return null; 
    case 'ParsePipeConfig': return accessor(index, new ParsePipeConfig())! as ParsePipeConfig;
    case 'KindFilterPipeConfig': return accessor(index, new KindFilterPipeConfig())! as KindFilterPipeConfig;
    case 'CounterPipeConfig': return accessor(index, new CounterPipeConfig())! as CounterPipeConfig;
    case 'NpubLimiterPipeConfig': return accessor(index, new NpubLimiterPipeConfig())! as NpubLimiterPipeConfig;
    case 'SaveToDbPipeConfig': return accessor(index, new SaveToDbPipeConfig())! as SaveToDbPipeConfig;
    case 'SerializeEventsPipeConfig': return accessor(index, new SerializeEventsPipeConfig())! as SerializeEventsPipeConfig;
    case 'ProofVerificationPipeConfig': return accessor(index, new ProofVerificationPipeConfig())! as ProofVerificationPipeConfig;
    default: return null;
  }
}
