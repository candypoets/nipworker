import { ByteString } from "src/lib/ByteString";
// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { Kind0Parsed, Kind0ParsedT } from '../../nostr/fb/kind0-parsed.js';
import { Kind10002Parsed, Kind10002ParsedT } from '../../nostr/fb/kind10002-parsed.js';
import { Kind10019Parsed, Kind10019ParsedT } from '../../nostr/fb/kind10019-parsed.js';
import { Kind17375Parsed, Kind17375ParsedT } from '../../nostr/fb/kind17375-parsed.js';
import { Kind17Parsed, Kind17ParsedT } from '../../nostr/fb/kind17-parsed.js';
import { Kind1Parsed, Kind1ParsedT } from '../../nostr/fb/kind1-parsed.js';
import { Kind39089Parsed, Kind39089ParsedT } from '../../nostr/fb/kind39089-parsed.js';
import { Kind3Parsed, Kind3ParsedT } from '../../nostr/fb/kind3-parsed.js';
import { Kind4Parsed, Kind4ParsedT } from '../../nostr/fb/kind4-parsed.js';
import { Kind6Parsed, Kind6ParsedT } from '../../nostr/fb/kind6-parsed.js';
import { Kind7374Parsed, Kind7374ParsedT } from '../../nostr/fb/kind7374-parsed.js';
import { Kind7375Parsed, Kind7375ParsedT } from '../../nostr/fb/kind7375-parsed.js';
import { Kind7376Parsed, Kind7376ParsedT } from '../../nostr/fb/kind7376-parsed.js';
import { Kind7Parsed, Kind7ParsedT } from '../../nostr/fb/kind7-parsed.js';
import { Kind9321Parsed, Kind9321ParsedT } from '../../nostr/fb/kind9321-parsed.js';
import { Kind9735Parsed, Kind9735ParsedT } from '../../nostr/fb/kind9735-parsed.js';


export enum ParsedData {
  NONE = 0,
  Kind0Parsed = 1,
  Kind1Parsed = 2,
  Kind3Parsed = 3,
  Kind4Parsed = 4,
  Kind6Parsed = 5,
  Kind7Parsed = 6,
  Kind17Parsed = 7,
  Kind10002Parsed = 8,
  Kind10019Parsed = 9,
  Kind17375Parsed = 10,
  Kind39089Parsed = 11,
  Kind7374Parsed = 12,
  Kind7375Parsed = 13,
  Kind7376Parsed = 14,
  Kind9321Parsed = 15,
  Kind9735Parsed = 16
}

export function unionToParsedData(
  type: ParsedData,
  accessor: (obj:Kind0Parsed|Kind10002Parsed|Kind10019Parsed|Kind17375Parsed|Kind17Parsed|Kind1Parsed|Kind39089Parsed|Kind3Parsed|Kind4Parsed|Kind6Parsed|Kind7374Parsed|Kind7375Parsed|Kind7376Parsed|Kind7Parsed|Kind9321Parsed|Kind9735Parsed) => Kind0Parsed|Kind10002Parsed|Kind10019Parsed|Kind17375Parsed|Kind17Parsed|Kind1Parsed|Kind39089Parsed|Kind3Parsed|Kind4Parsed|Kind6Parsed|Kind7374Parsed|Kind7375Parsed|Kind7376Parsed|Kind7Parsed|Kind9321Parsed|Kind9735Parsed|null
): Kind0Parsed|Kind10002Parsed|Kind10019Parsed|Kind17375Parsed|Kind17Parsed|Kind1Parsed|Kind39089Parsed|Kind3Parsed|Kind4Parsed|Kind6Parsed|Kind7374Parsed|Kind7375Parsed|Kind7376Parsed|Kind7Parsed|Kind9321Parsed|Kind9735Parsed|null {
  switch(ParsedData[type]) {
    case 'NONE': return null; 
    case 'Kind0Parsed': return accessor(new Kind0Parsed())! as Kind0Parsed;
    case 'Kind1Parsed': return accessor(new Kind1Parsed())! as Kind1Parsed;
    case 'Kind3Parsed': return accessor(new Kind3Parsed())! as Kind3Parsed;
    case 'Kind4Parsed': return accessor(new Kind4Parsed())! as Kind4Parsed;
    case 'Kind6Parsed': return accessor(new Kind6Parsed())! as Kind6Parsed;
    case 'Kind7Parsed': return accessor(new Kind7Parsed())! as Kind7Parsed;
    case 'Kind17Parsed': return accessor(new Kind17Parsed())! as Kind17Parsed;
    case 'Kind10002Parsed': return accessor(new Kind10002Parsed())! as Kind10002Parsed;
    case 'Kind10019Parsed': return accessor(new Kind10019Parsed())! as Kind10019Parsed;
    case 'Kind17375Parsed': return accessor(new Kind17375Parsed())! as Kind17375Parsed;
    case 'Kind39089Parsed': return accessor(new Kind39089Parsed())! as Kind39089Parsed;
    case 'Kind7374Parsed': return accessor(new Kind7374Parsed())! as Kind7374Parsed;
    case 'Kind7375Parsed': return accessor(new Kind7375Parsed())! as Kind7375Parsed;
    case 'Kind7376Parsed': return accessor(new Kind7376Parsed())! as Kind7376Parsed;
    case 'Kind9321Parsed': return accessor(new Kind9321Parsed())! as Kind9321Parsed;
    case 'Kind9735Parsed': return accessor(new Kind9735Parsed())! as Kind9735Parsed;
    default: return null;
  }
}

export function unionListToParsedData(
  type: ParsedData, 
  accessor: (index: number, obj:Kind0Parsed|Kind10002Parsed|Kind10019Parsed|Kind17375Parsed|Kind17Parsed|Kind1Parsed|Kind39089Parsed|Kind3Parsed|Kind4Parsed|Kind6Parsed|Kind7374Parsed|Kind7375Parsed|Kind7376Parsed|Kind7Parsed|Kind9321Parsed|Kind9735Parsed) => Kind0Parsed|Kind10002Parsed|Kind10019Parsed|Kind17375Parsed|Kind17Parsed|Kind1Parsed|Kind39089Parsed|Kind3Parsed|Kind4Parsed|Kind6Parsed|Kind7374Parsed|Kind7375Parsed|Kind7376Parsed|Kind7Parsed|Kind9321Parsed|Kind9735Parsed|null, 
  index: number
): Kind0Parsed|Kind10002Parsed|Kind10019Parsed|Kind17375Parsed|Kind17Parsed|Kind1Parsed|Kind39089Parsed|Kind3Parsed|Kind4Parsed|Kind6Parsed|Kind7374Parsed|Kind7375Parsed|Kind7376Parsed|Kind7Parsed|Kind9321Parsed|Kind9735Parsed|null {
  switch(ParsedData[type]) {
    case 'NONE': return null; 
    case 'Kind0Parsed': return accessor(index, new Kind0Parsed())! as Kind0Parsed;
    case 'Kind1Parsed': return accessor(index, new Kind1Parsed())! as Kind1Parsed;
    case 'Kind3Parsed': return accessor(index, new Kind3Parsed())! as Kind3Parsed;
    case 'Kind4Parsed': return accessor(index, new Kind4Parsed())! as Kind4Parsed;
    case 'Kind6Parsed': return accessor(index, new Kind6Parsed())! as Kind6Parsed;
    case 'Kind7Parsed': return accessor(index, new Kind7Parsed())! as Kind7Parsed;
    case 'Kind17Parsed': return accessor(index, new Kind17Parsed())! as Kind17Parsed;
    case 'Kind10002Parsed': return accessor(index, new Kind10002Parsed())! as Kind10002Parsed;
    case 'Kind10019Parsed': return accessor(index, new Kind10019Parsed())! as Kind10019Parsed;
    case 'Kind17375Parsed': return accessor(index, new Kind17375Parsed())! as Kind17375Parsed;
    case 'Kind39089Parsed': return accessor(index, new Kind39089Parsed())! as Kind39089Parsed;
    case 'Kind7374Parsed': return accessor(index, new Kind7374Parsed())! as Kind7374Parsed;
    case 'Kind7375Parsed': return accessor(index, new Kind7375Parsed())! as Kind7375Parsed;
    case 'Kind7376Parsed': return accessor(index, new Kind7376Parsed())! as Kind7376Parsed;
    case 'Kind9321Parsed': return accessor(index, new Kind9321Parsed())! as Kind9321Parsed;
    case 'Kind9735Parsed': return accessor(index, new Kind9735Parsed())! as Kind9735Parsed;
    default: return null;
  }
}
