import { ByteString } from "src/lib/ByteString";
// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Proof, ProofT } from '../../nostr/fb/proof.js';


export class Kind7375Parsed implements flatbuffers.IUnpackableObject<Kind7375ParsedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Kind7375Parsed {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsKind7375Parsed(bb:flatbuffers.ByteBuffer, obj?:Kind7375Parsed):Kind7375Parsed {
  return (obj || new Kind7375Parsed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsKind7375Parsed(bb:flatbuffers.ByteBuffer, obj?:Kind7375Parsed):Kind7375Parsed {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Kind7375Parsed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

mintUrl(): ByteString|null
mintUrl(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
mintUrl(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

proofs(index: number, obj?:Proof):Proof|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Proof()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

proofsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

deletedIds(index: number): ByteString
deletedIds(index: number,optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array
deletedIds(index: number,optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__stringByteString(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

deletedIdsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

decrypted():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startKind7375Parsed(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addMintUrl(builder:flatbuffers.Builder, mintUrlOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, mintUrlOffset, 0);
}

static addProofs(builder:flatbuffers.Builder, proofsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, proofsOffset, 0);
}

static createProofsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startProofsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDeletedIds(builder:flatbuffers.Builder, deletedIdsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, deletedIdsOffset, 0);
}

static createDeletedIdsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startDeletedIdsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDecrypted(builder:flatbuffers.Builder, decrypted:boolean) {
  builder.addFieldInt8(3, +decrypted, +false);
}

static endKind7375Parsed(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // mint_url
  builder.requiredField(offset, 6) // proofs
  return offset;
}

static createKind7375Parsed(builder:flatbuffers.Builder, mintUrlOffset:flatbuffers.Offset, proofsOffset:flatbuffers.Offset, deletedIdsOffset:flatbuffers.Offset, decrypted:boolean):flatbuffers.Offset {
  Kind7375Parsed.startKind7375Parsed(builder);
  Kind7375Parsed.addMintUrl(builder, mintUrlOffset);
  Kind7375Parsed.addProofs(builder, proofsOffset);
  Kind7375Parsed.addDeletedIds(builder, deletedIdsOffset);
  Kind7375Parsed.addDecrypted(builder, decrypted);
  return Kind7375Parsed.endKind7375Parsed(builder);
}

unpack(): Kind7375ParsedT {
  return new Kind7375ParsedT(
    this.mintUrl(),
    this.bb!.createObjList<Proof, ProofT>(this.proofs.bind(this), this.proofsLength()),
    this.bb!.createScalarList<string>(this.deletedIds.bind(this), this.deletedIdsLength()),
    this.decrypted()
  );
}


unpackTo(_o: Kind7375ParsedT): void {
  _o.mintUrl = this.mintUrl();
  _o.proofs = this.bb!.createObjList<Proof, ProofT>(this.proofs.bind(this), this.proofsLength());
  _o.deletedIds = this.bb!.createScalarList<string>(this.deletedIds.bind(this), this.deletedIdsLength());
  _o.decrypted = this.decrypted();
}
}

export class Kind7375ParsedT implements flatbuffers.IGeneratedObject {
constructor(
  public mintUrl: ByteString|Uint8Array|null = null,
  public proofs: (ProofT)[] = [],
  public deletedIds: (string)[] = [],
  public decrypted: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const mintUrl = (this.mintUrl !== null ? builder.createString(this.mintUrl!) : 0);
  const proofs = Kind7375Parsed.createProofsVector(builder, builder.createObjectOffsetList(this.proofs));
  const deletedIds = Kind7375Parsed.createDeletedIdsVector(builder, builder.createObjectOffsetList(this.deletedIds));

  return Kind7375Parsed.createKind7375Parsed(builder,
    mintUrl,
    proofs,
    deletedIds,
    this.decrypted
  );
}
}
