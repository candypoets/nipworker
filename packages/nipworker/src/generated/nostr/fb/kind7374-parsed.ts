import { ByteString } from "src/lib/ByteString";
// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class Kind7374Parsed implements flatbuffers.IUnpackableObject<Kind7374ParsedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Kind7374Parsed {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsKind7374Parsed(bb:flatbuffers.ByteBuffer, obj?:Kind7374Parsed):Kind7374Parsed {
  return (obj || new Kind7374Parsed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsKind7374Parsed(bb:flatbuffers.ByteBuffer, obj?:Kind7374Parsed):Kind7374Parsed {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Kind7374Parsed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

quoteId(): ByteString|null
quoteId(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
quoteId(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

mintUrl(): ByteString|null
mintUrl(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
mintUrl(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

expiration():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

static startKind7374Parsed(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addQuoteId(builder:flatbuffers.Builder, quoteIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, quoteIdOffset, 0);
}

static addMintUrl(builder:flatbuffers.Builder, mintUrlOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, mintUrlOffset, 0);
}

static addExpiration(builder:flatbuffers.Builder, expiration:bigint) {
  builder.addFieldInt64(2, expiration, BigInt('0'));
}

static endKind7374Parsed(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // quote_id
  builder.requiredField(offset, 6) // mint_url
  return offset;
}

static createKind7374Parsed(builder:flatbuffers.Builder, quoteIdOffset:flatbuffers.Offset, mintUrlOffset:flatbuffers.Offset, expiration:bigint):flatbuffers.Offset {
  Kind7374Parsed.startKind7374Parsed(builder);
  Kind7374Parsed.addQuoteId(builder, quoteIdOffset);
  Kind7374Parsed.addMintUrl(builder, mintUrlOffset);
  Kind7374Parsed.addExpiration(builder, expiration);
  return Kind7374Parsed.endKind7374Parsed(builder);
}

unpack(): Kind7374ParsedT {
  return new Kind7374ParsedT(
    this.quoteId(),
    this.mintUrl(),
    this.expiration()
  );
}


unpackTo(_o: Kind7374ParsedT): void {
  _o.quoteId = this.quoteId();
  _o.mintUrl = this.mintUrl();
  _o.expiration = this.expiration();
}
}

export class Kind7374ParsedT implements flatbuffers.IGeneratedObject {
constructor(
  public quoteId: ByteString|Uint8Array|null = null,
  public mintUrl: ByteString|Uint8Array|null = null,
  public expiration: bigint = BigInt('0')
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const quoteId = (this.quoteId !== null ? builder.createString(this.quoteId!) : 0);
  const mintUrl = (this.mintUrl !== null ? builder.createString(this.mintUrl!) : 0);

  return Kind7374Parsed.createKind7374Parsed(builder,
    quoteId,
    mintUrl,
    this.expiration
  );
}
}
