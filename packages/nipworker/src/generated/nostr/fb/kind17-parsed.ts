import { ByteString } from "src/lib/ByteString";
// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Emoji, EmojiT } from '../../nostr/fb/emoji.js';
import { ReactionType } from '../../nostr/fb/reaction-type.js';


export class Kind17Parsed implements flatbuffers.IUnpackableObject<Kind17ParsedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Kind17Parsed {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsKind17Parsed(bb:flatbuffers.ByteBuffer, obj?:Kind17Parsed):Kind17Parsed {
  return (obj || new Kind17Parsed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsKind17Parsed(bb:flatbuffers.ByteBuffer, obj?:Kind17Parsed):Kind17Parsed {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Kind17Parsed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

reactionType():ReactionType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ReactionType.Like;
}

eventId(): ByteString|null
eventId(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
eventId(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

pubkey(): ByteString|null
pubkey(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
pubkey(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

eventKind():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

emoji(obj?:Emoji):Emoji|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new Emoji()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

targetCoordinates(): ByteString|null
targetCoordinates(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
targetCoordinates(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

static startKind17Parsed(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addReactionType(builder:flatbuffers.Builder, reactionType:ReactionType) {
  builder.addFieldInt8(0, reactionType, ReactionType.Like);
}

static addEventId(builder:flatbuffers.Builder, eventIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, eventIdOffset, 0);
}

static addPubkey(builder:flatbuffers.Builder, pubkeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, pubkeyOffset, 0);
}

static addEventKind(builder:flatbuffers.Builder, eventKind:bigint) {
  builder.addFieldInt64(3, eventKind, BigInt('0'));
}

static addEmoji(builder:flatbuffers.Builder, emojiOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, emojiOffset, 0);
}

static addTargetCoordinates(builder:flatbuffers.Builder, targetCoordinatesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, targetCoordinatesOffset, 0);
}

static endKind17Parsed(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 6) // event_id
  builder.requiredField(offset, 8) // pubkey
  return offset;
}


unpack(): Kind17ParsedT {
  return new Kind17ParsedT(
    this.reactionType(),
    this.eventId(),
    this.pubkey(),
    this.eventKind(),
    (this.emoji() !== null ? this.emoji()!.unpack() : null),
    this.targetCoordinates()
  );
}


unpackTo(_o: Kind17ParsedT): void {
  _o.reactionType = this.reactionType();
  _o.eventId = this.eventId();
  _o.pubkey = this.pubkey();
  _o.eventKind = this.eventKind();
  _o.emoji = (this.emoji() !== null ? this.emoji()!.unpack() : null);
  _o.targetCoordinates = this.targetCoordinates();
}
}

export class Kind17ParsedT implements flatbuffers.IGeneratedObject {
constructor(
  public reactionType: ReactionType = ReactionType.Like,
  public eventId: ByteString|Uint8Array|null = null,
  public pubkey: ByteString|Uint8Array|null = null,
  public eventKind: bigint = BigInt('0'),
  public emoji: EmojiT|null = null,
  public targetCoordinates: ByteString|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const eventId = (this.eventId !== null ? builder.createString(this.eventId!) : 0);
  const pubkey = (this.pubkey !== null ? builder.createString(this.pubkey!) : 0);
  const emoji = (this.emoji !== null ? this.emoji!.pack(builder) : 0);
  const targetCoordinates = (this.targetCoordinates !== null ? builder.createString(this.targetCoordinates!) : 0);

  Kind17Parsed.startKind17Parsed(builder);
  Kind17Parsed.addReactionType(builder, this.reactionType);
  Kind17Parsed.addEventId(builder, eventId);
  Kind17Parsed.addPubkey(builder, pubkey);
  Kind17Parsed.addEventKind(builder, this.eventKind);
  Kind17Parsed.addEmoji(builder, emoji);
  Kind17Parsed.addTargetCoordinates(builder, targetCoordinates);

  return Kind17Parsed.endKind17Parsed(builder);
}
}
