import { ByteString } from "src/lib/ByteString";
// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class Kind39089Parsed implements flatbuffers.IUnpackableObject<Kind39089ParsedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Kind39089Parsed {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsKind39089Parsed(bb:flatbuffers.ByteBuffer, obj?:Kind39089Parsed):Kind39089Parsed {
  return (obj || new Kind39089Parsed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsKind39089Parsed(bb:flatbuffers.ByteBuffer, obj?:Kind39089Parsed):Kind39089Parsed {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Kind39089Parsed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

listIdentifier(): ByteString|null
listIdentifier(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
listIdentifier(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

people(index: number): ByteString
people(index: number,optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array
people(index: number,optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__stringByteString(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

peopleLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

title(): ByteString|null
title(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
title(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

description(): ByteString|null
description(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
description(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

image(): ByteString|null
image(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
image(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

static startKind39089Parsed(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addListIdentifier(builder:flatbuffers.Builder, listIdentifierOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, listIdentifierOffset, 0);
}

static addPeople(builder:flatbuffers.Builder, peopleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, peopleOffset, 0);
}

static createPeopleVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startPeopleVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, titleOffset, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, descriptionOffset, 0);
}

static addImage(builder:flatbuffers.Builder, imageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, imageOffset, 0);
}

static endKind39089Parsed(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // list_identifier
  builder.requiredField(offset, 6) // people
  return offset;
}

static createKind39089Parsed(builder:flatbuffers.Builder, listIdentifierOffset:flatbuffers.Offset, peopleOffset:flatbuffers.Offset, titleOffset:flatbuffers.Offset, descriptionOffset:flatbuffers.Offset, imageOffset:flatbuffers.Offset):flatbuffers.Offset {
  Kind39089Parsed.startKind39089Parsed(builder);
  Kind39089Parsed.addListIdentifier(builder, listIdentifierOffset);
  Kind39089Parsed.addPeople(builder, peopleOffset);
  Kind39089Parsed.addTitle(builder, titleOffset);
  Kind39089Parsed.addDescription(builder, descriptionOffset);
  Kind39089Parsed.addImage(builder, imageOffset);
  return Kind39089Parsed.endKind39089Parsed(builder);
}

unpack(): Kind39089ParsedT {
  return new Kind39089ParsedT(
    this.listIdentifier(),
    this.bb!.createScalarList<string>(this.people.bind(this), this.peopleLength()),
    this.title(),
    this.description(),
    this.image()
  );
}


unpackTo(_o: Kind39089ParsedT): void {
  _o.listIdentifier = this.listIdentifier();
  _o.people = this.bb!.createScalarList<string>(this.people.bind(this), this.peopleLength());
  _o.title = this.title();
  _o.description = this.description();
  _o.image = this.image();
}
}

export class Kind39089ParsedT implements flatbuffers.IGeneratedObject {
constructor(
  public listIdentifier: ByteString|Uint8Array|null = null,
  public people: (string)[] = [],
  public title: ByteString|Uint8Array|null = null,
  public description: ByteString|Uint8Array|null = null,
  public image: ByteString|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const listIdentifier = (this.listIdentifier !== null ? builder.createString(this.listIdentifier!) : 0);
  const people = Kind39089Parsed.createPeopleVector(builder, builder.createObjectOffsetList(this.people));
  const title = (this.title !== null ? builder.createString(this.title!) : 0);
  const description = (this.description !== null ? builder.createString(this.description!) : 0);
  const image = (this.image !== null ? builder.createString(this.image!) : 0);

  return Kind39089Parsed.createKind39089Parsed(builder,
    listIdentifier,
    people,
    title,
    description,
    image
  );
}
}
