import { ByteString } from "src/lib/ByteString";
// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class Kind17375Parsed implements flatbuffers.IUnpackableObject<Kind17375ParsedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Kind17375Parsed {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsKind17375Parsed(bb:flatbuffers.ByteBuffer, obj?:Kind17375Parsed):Kind17375Parsed {
  return (obj || new Kind17375Parsed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsKind17375Parsed(bb:flatbuffers.ByteBuffer, obj?:Kind17375Parsed):Kind17375Parsed {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Kind17375Parsed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

mints(index: number): ByteString
mints(index: number,optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array
mints(index: number,optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__stringByteString(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

mintsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

p2pkPrivKey(): ByteString|null
p2pkPrivKey(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
p2pkPrivKey(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

p2pkPubKey(): ByteString|null
p2pkPubKey(optionalEncoding:flatbuffers.Encoding): ByteString|Uint8Array|null
p2pkPubKey(optionalEncoding?:any): ByteString|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__stringByteString(this.bb_pos + offset, optionalEncoding) : null;
}

decrypted():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startKind17375Parsed(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addMints(builder:flatbuffers.Builder, mintsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, mintsOffset, 0);
}

static createMintsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMintsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addP2pkPrivKey(builder:flatbuffers.Builder, p2pkPrivKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, p2pkPrivKeyOffset, 0);
}

static addP2pkPubKey(builder:flatbuffers.Builder, p2pkPubKeyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, p2pkPubKeyOffset, 0);
}

static addDecrypted(builder:flatbuffers.Builder, decrypted:boolean) {
  builder.addFieldInt8(3, +decrypted, +false);
}

static endKind17375Parsed(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // mints
  return offset;
}

static createKind17375Parsed(builder:flatbuffers.Builder, mintsOffset:flatbuffers.Offset, p2pkPrivKeyOffset:flatbuffers.Offset, p2pkPubKeyOffset:flatbuffers.Offset, decrypted:boolean):flatbuffers.Offset {
  Kind17375Parsed.startKind17375Parsed(builder);
  Kind17375Parsed.addMints(builder, mintsOffset);
  Kind17375Parsed.addP2pkPrivKey(builder, p2pkPrivKeyOffset);
  Kind17375Parsed.addP2pkPubKey(builder, p2pkPubKeyOffset);
  Kind17375Parsed.addDecrypted(builder, decrypted);
  return Kind17375Parsed.endKind17375Parsed(builder);
}

unpack(): Kind17375ParsedT {
  return new Kind17375ParsedT(
    this.bb!.createScalarList<string>(this.mints.bind(this), this.mintsLength()),
    this.p2pkPrivKey(),
    this.p2pkPubKey(),
    this.decrypted()
  );
}


unpackTo(_o: Kind17375ParsedT): void {
  _o.mints = this.bb!.createScalarList<string>(this.mints.bind(this), this.mintsLength());
  _o.p2pkPrivKey = this.p2pkPrivKey();
  _o.p2pkPubKey = this.p2pkPubKey();
  _o.decrypted = this.decrypted();
}
}

export class Kind17375ParsedT implements flatbuffers.IGeneratedObject {
constructor(
  public mints: (string)[] = [],
  public p2pkPrivKey: ByteString|Uint8Array|null = null,
  public p2pkPubKey: ByteString|Uint8Array|null = null,
  public decrypted: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const mints = Kind17375Parsed.createMintsVector(builder, builder.createObjectOffsetList(this.mints));
  const p2pkPrivKey = (this.p2pkPrivKey !== null ? builder.createString(this.p2pkPrivKey!) : 0);
  const p2pkPubKey = (this.p2pkPubKey !== null ? builder.createString(this.p2pkPubKey!) : 0);

  return Kind17375Parsed.createKind17375Parsed(builder,
    mints,
    p2pkPrivKey,
    p2pkPubKey,
    this.decrypted
  );
}
}
